[
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog posts",
    "section": "",
    "text": "What makes FIFA 23 players good?\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\nExperimentation with Elastic -net regression and decision tree boosting.\n\n\n\n\n\n\nMay 6, 2023\n\n\nTomer Zipori\n\n\n\n\n\n\n  \n\n\n\n\nWho is the leading US state in UFO reports? probably not what you thought\n\n\n\n\n\n\n\ncode\n\n\nvisualization\n\n\nggplot2\n\n\n\n\nVisualizing UFO reports per state capita\n\n\n\n\n\n\nMay 6, 2023\n\n\nTomer Zipori\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Tomer Zipori",
    "section": "",
    "text": "Data science & data visualization nerd. I’m studying for my MA in Cognitive Psychology at Ben-Gurion University of the Negev. I hope to record and share my journey in studying and applying cool data-science stuff!"
  },
  {
    "objectID": "posts/fifa23/index.html",
    "href": "posts/fifa23/index.html",
    "title": "What makes FIFA 23 players good?",
    "section": "",
    "text": "The current Data is an upload to Kaggle by Babatunde Zenith, and it includes information about players in the popular FIFA 23 video game. Information includes: name, age, nationality, position, various football ratings and contract deals.\nThe current notebook is an attempt at:\n      1. Accurately and efficiently predicting player’s overall rating.\n      2. Identifying important variables (features) for this prediction.\nBoth goals will be achieved using two methods: Elastic-net regression and XGBoost. Data pre-processing will be done with tidyverse, Model fitting and evaluation will be done with the caret and gbm packages."
  },
  {
    "objectID": "posts/fifa23/index.html#re-naming-columns",
    "href": "posts/fifa23/index.html#re-naming-columns",
    "title": "What makes FIFA 23 players good?",
    "section": "Re-naming columns",
    "text": "Re-naming columns\nReplacing spaces with underscores for ease.\n\nnames(players) <- str_replace_all(names(players), pattern = \" \", replacement = \"_\")"
  },
  {
    "objectID": "posts/fifa23/index.html#non-numeric-variables",
    "href": "posts/fifa23/index.html#non-numeric-variables",
    "title": "What makes FIFA 23 players good?",
    "section": "non-numeric variables",
    "text": "non-numeric variables\nFirst we’ll look at potential garbage variables.\n\nnames(select(players, where(is.character)))\n\n [1] \"Known_As\"                    \"Full_Name\"                  \n [3] \"Positions_Played\"            \"Best_Position\"              \n [5] \"Nationality\"                 \"Image_Link\"                 \n [7] \"Club_Name\"                   \"Club_Position\"              \n [9] \"Contract_Until\"              \"Club_Jersey_Number\"         \n[11] \"On_Loan\"                     \"Preferred_Foot\"             \n[13] \"National_Team_Name\"          \"National_Team_Image_Link\"   \n[15] \"National_Team_Position\"      \"National_Team_Jersey_Number\"\n[17] \"Attacking_Work_Rate\"         \"Defensive_Work_Rate\"        \n\n\nAlmost all garbage data. Since I’ve noted that Work Rate variables are ordered (low-medium-high) We’ll re-code them:\n\nplayers <- players %>%\n  mutate(Attacking_Work_Rate = case_when(Attacking_Work_Rate == \"Low\" ~ 1,\n                                         Attacking_Work_Rate == \"Medium\" ~ 2,\n                                         Attacking_Work_Rate == \"High\" ~ 3),\n         Defensive_Work_Rate = case_when(Defensive_Work_Rate == \"Low\" ~ 1,\n                                         Defensive_Work_Rate == \"Medium\" ~ 2,\n                                         Defensive_Work_Rate == \"High\" ~ 3)) %>%\n  select(-Known_As, -Full_Name, -Positions_Played, -Nationality, -Image_Link, -Club_Name, -Contract_Until, -Club_Jersey_Number, -National_Team_Name, -National_Team_Image_Link, -National_Team_Jersey_Number, -On_Loan) %>% # getting rid of garbage variables\n  mutate(across(where(is.character), ~na_if(., \"-\"))) # replacing all \"-\" with NA"
  },
  {
    "objectID": "posts/fifa23/index.html#searching-for-variables-with-large-number-of-nas",
    "href": "posts/fifa23/index.html#searching-for-variables-with-large-number-of-nas",
    "title": "What makes FIFA 23 players good?",
    "section": "Searching for variables with large number of NA’s",
    "text": "Searching for variables with large number of NA’s\n\ncolSums(is.na(players))\n\n                 Overall                Potential           Value(in_Euro) \n                       0                        0                        0 \n           Best_Position                      Age            Height(in_cm) \n                       0                        0                        0 \n           Weight(in_kg)               TotalStats                BaseStats \n                       0                        0                        0 \n           Wage(in_Euro)           Release_Clause            Club_Position \n                       0                        0                       86 \n               Joined_On           Preferred_Foot         Weak_Foot_Rating \n                       0                        0                        0 \n             Skill_Moves International_Reputation   National_Team_Position \n                       0                        0                    16746 \n     Attacking_Work_Rate      Defensive_Work_Rate               Pace_Total \n                       0                        0                        0 \n          Shooting_Total            Passing_Total          Dribbling_Total \n                       0                        0                        0 \n         Defending_Total        Physicality_Total                 Crossing \n                       0                        0                        0 \n               Finishing         Heading_Accuracy            Short_Passing \n                       0                        0                        0 \n                 Volleys                Dribbling                    Curve \n                       0                        0                        0 \n       Freekick_Accuracy              LongPassing              BallControl \n                       0                        0                        0 \n            Acceleration             Sprint_Speed                  Agility \n                       0                        0                        0 \n               Reactions                  Balance               Shot_Power \n                       0                        0                        0 \n                 Jumping                  Stamina                 Strength \n                       0                        0                        0 \n              Long_Shots               Aggression            Interceptions \n                       0                        0                        0 \n             Positioning                   Vision                Penalties \n                       0                        0                        0 \n               Composure                  Marking          Standing_Tackle \n                       0                        0                        0 \n          Sliding_Tackle        Goalkeeper_Diving      Goalkeeper_Handling \n                       0                        0                        0 \n       GoalkeeperKicking   Goalkeeper_Positioning      Goalkeeper_Reflexes \n                       0                        0                        0 \n               ST_Rating                LW_Rating                LF_Rating \n                       0                        0                        0 \n               CF_Rating                RF_Rating                RW_Rating \n                       0                        0                        0 \n              CAM_Rating                LM_Rating                CM_Rating \n                       0                        0                        0 \n               RM_Rating               LWB_Rating               CDM_Rating \n                       0                        0                        0 \n              RWB_Rating                LB_Rating                CB_Rating \n                       0                        0                        0 \n               RB_Rating                GK_Rating \n                       0                        0 \n\n\nNational team position seems sparse, we’ll have to get rid of club_position as well for the model fitting. We’ll also get rid of best_position because it creates so much dummy vars. I’ll analyzed it in another day…\n\nplayers <- select(players, -National_Team_Position, -Club_Position, -Best_Position)"
  },
  {
    "objectID": "posts/fifa23/index.html#data-splitting",
    "href": "posts/fifa23/index.html#data-splitting",
    "title": "What makes FIFA 23 players good?",
    "section": "Data splitting",
    "text": "Data splitting\n\nset.seed(14)\ntrain_id <- createDataPartition(y = players$Overall, p = 0.7, list = F)\n\nplayers_train <- players[train_id,]\nplayers_test <- players[-train_id,]"
  },
  {
    "objectID": "posts/fifa23/index.html#tuning-grid-for-hyper-parameters",
    "href": "posts/fifa23/index.html#tuning-grid-for-hyper-parameters",
    "title": "What makes FIFA 23 players good?",
    "section": "Tuning grid for hyper-parameters",
    "text": "Tuning grid for hyper-parameters\n\ntg <- expand.grid(alpha = c(seq(0, 1, length.out = 25)),\n                  lambda = c(2 ^ seq(10, -10, length = 100)))\n\nSetting a relatively large range of hyper-parameters because elastic-net regression is not super expansive computationally."
  },
  {
    "objectID": "posts/fifa23/index.html#training",
    "href": "posts/fifa23/index.html#training",
    "title": "What makes FIFA 23 players good?",
    "section": "Training",
    "text": "Training\n\nelastic_reg <- train(Overall ~ ., \n                    data = players_train,\n                    method = \"glmnet\",\n                    preProcess = c(\"center\", \"scale\"), # for better interpatation of coefficients\n                    tuneGrid = tg,\n                    trControl =  trainControl(method = \"cv\", number = 10)) # 10-fold Cross-Validation"
  },
  {
    "objectID": "posts/fifa23/index.html#best-hyper-parameters",
    "href": "posts/fifa23/index.html#best-hyper-parameters",
    "title": "What makes FIFA 23 players good?",
    "section": "Best hyper-parameters",
    "text": "Best hyper-parameters\n\nelastic_reg$bestTune\n\n     alpha       lambda\n1501 0.625 0.0009765625"
  },
  {
    "objectID": "posts/fifa23/index.html#traincv-error",
    "href": "posts/fifa23/index.html#traincv-error",
    "title": "What makes FIFA 23 players good?",
    "section": "Train/CV error",
    "text": "Train/CV error\n\nplot(elastic_reg, xTrans = log, digits = 3)\n\n\n\nelastic_reg$results[elastic_reg$results$RMSE == min(elastic_reg$results$RMSE, na.rm = T),]\n\n     alpha       lambda     RMSE  Rsquared     MAE     RMSESD  RsquaredSD\n1501 0.625 0.0009765625 1.601089 0.9440492 1.24766 0.04469899 0.003446449\n          MAESD\n1501 0.02690937\n\n\nAll mixes of \\(\\alpha\\) and \\(\\lambda\\) hyper-parameters converge in the end."
  },
  {
    "objectID": "posts/fifa23/index.html#model-coefficients",
    "href": "posts/fifa23/index.html#model-coefficients",
    "title": "What makes FIFA 23 players good?",
    "section": "Model coefficients",
    "text": "Model coefficients\n\n\n\n\nelasnet_coeffs <- coef(elastic_reg$finalModel, s = elastic_reg$bestTune$lambda)\nplot(elasnet_coeffs, ylab = \"Coefficient\")\n\n\n\nround(elasnet_coeffs, 4)\n\n73 x 1 sparse Matrix of class \"dgCMatrix\"\n                              s1\n(Intercept)              65.9420\nPotential                 2.3510\n`Value(in_Euro)`          0.6037\nAge                       2.0174\n`Height(in_cm)`          -0.1111\n`Weight(in_kg)`           0.0979\nTotalStats               -2.7794\nBaseStats                 0.0004\n`Wage(in_Euro)`           0.2468\nRelease_Clause           -0.2689\nJoined_On                 0.0710\nPreferred_FootRight      -0.0694\nWeak_Foot_Rating         -0.0397\nSkill_Moves               0.3644\nInternational_Reputation -0.2143\nAttacking_Work_Rate      -0.0729\nDefensive_Work_Rate      -0.1001\nPace_Total                0.6887\nShooting_Total            0.4371\nPassing_Total             0.6242\nDribbling_Total           1.4907\nDefending_Total          -0.0937\nPhysicality_Total         0.9278\nCrossing                  0.3602\nFinishing                -0.4256\nHeading_Accuracy          0.8768\nShort_Passing             0.2001\nVolleys                   0.0255\nDribbling                -1.3137\nCurve                     0.0000\nFreekick_Accuracy         0.1731\nLongPassing              -0.6509\nBallControl               0.1516\nAcceleration              0.0289\nSprint_Speed             -0.1612\nAgility                  -0.1264\nReactions                 1.1084\nBalance                  -0.0032\nShot_Power               -0.0565\nJumping                   0.0664\nStamina                   0.0582\nStrength                 -0.1455\nLong_Shots               -0.3293\nAggression               -0.1703\nPositioning              -1.1545\nVision                   -0.7001\nPenalties                 0.1108\nComposure                 0.4431\nMarking                   0.6215\nStanding_Tackle           0.2082\nSliding_Tackle            0.2331\nGoalkeeper_Diving         0.1745\nGoalkeeper_Handling      -0.0091\nGoalkeeperKicking         0.0767\nGoalkeeper_Positioning   -0.0696\nGoalkeeper_Reflexes      -0.0828\nST_Rating                 2.5495\nLW_Rating                -0.0648\nLF_Rating                 0.0000\nCF_Rating                 0.0000\nRF_Rating                 0.0000\nRW_Rating                 .     \nCAM_Rating               -0.1751\nLM_Rating                 0.5492\nCM_Rating                 1.9575\nRM_Rating                 0.0129\nLWB_Rating                .     \nCDM_Rating                1.3227\nRWB_Rating                .     \nLB_Rating                -0.0021\nCB_Rating                -0.9501\nRB_Rating                 .     \nGK_Rating                 0.6368\n\n\nThe intercept is quite large. Let’s look at the variables in a more informative scale.\n\nplot(elasnet_coeffs[-1,], ylab = \"Coefficient\")"
  },
  {
    "objectID": "posts/fifa23/index.html#test-error",
    "href": "posts/fifa23/index.html#test-error",
    "title": "What makes FIFA 23 players good?",
    "section": "Test error",
    "text": "Test error\n\nelasticreg_pred <- predict(elastic_reg, newdata = players_test) # calculating model's prediction for test set\n\n\n\n\nTest error and effect size\n\\(RMSE=1.60955711701293\\)\n\\(R^2=0.944839845538989\\)\nVery nice!"
  },
  {
    "objectID": "posts/fifa23/index.html#training-control",
    "href": "posts/fifa23/index.html#training-control",
    "title": "What makes FIFA 23 players good?",
    "section": "Training control",
    "text": "Training control\nWe’ll use adaptive cross-validation in order to make the hyper-parameter search more efficient.\nFor further explanation on implementation in R see. For further reading on theory see.\n\ntr <- trainControl(method = \"adaptive_cv\",\n                   number = 10, repeats = 10,\n                   adaptive = list(min = 5, alpha = 0.05, \n                                   method = \"BT\", complete = TRUE),\n                   search = \"random\")"
  },
  {
    "objectID": "posts/fifa23/index.html#training-1",
    "href": "posts/fifa23/index.html#training-1",
    "title": "What makes FIFA 23 players good?",
    "section": "Training",
    "text": "Training\n\nset.seed(14)\nxgboost <- train(Overall ~ ., \n                   data = players_train,\n                   method = \"gbm\",\n                   trControl = tr, # No explicit tuning grid is needed\n                   verbose = T)"
  },
  {
    "objectID": "posts/fifa23/index.html#traincv-error-1",
    "href": "posts/fifa23/index.html#traincv-error-1",
    "title": "What makes FIFA 23 players good?",
    "section": "Train/CV error",
    "text": "Train/CV error\nGetting the results of the best tuning parameters found.\n\nxgboost$results[xgboost$results$RMSE == min(xgboost$results$RMSE, na.rm = T),5:10]\n\n       RMSE  Rsquared       MAE      RMSESD   RsquaredSD       MAESD\n2 0.7146858 0.9893686 0.5457707 0.005980442 0.0002966158 0.002603466\n\n\nSeems quite optimized, but is it overfitted?"
  },
  {
    "objectID": "posts/fifa23/index.html#test-error-1",
    "href": "posts/fifa23/index.html#test-error-1",
    "title": "What makes FIFA 23 players good?",
    "section": "Test error",
    "text": "Test error\n\nboost_pred <- predict(xgboost, players_test)\n\n\n\n\nTest error and effect size\n\\(RMSE=0.700272523649518\\)\n\\(R^2=0.989645490170188\\)\nVery Very nice!"
  },
  {
    "objectID": "posts/fifa23/index.html#variable-importance",
    "href": "posts/fifa23/index.html#variable-importance",
    "title": "What makes FIFA 23 players good?",
    "section": "Variable importance",
    "text": "Variable importance\n\nvarimp <- caret::varImp(xgboost, scale = T)\n\nvarimp\n\ngbm variable importance\n\n  only 20 most important variables shown (out of 72)\n\n                        Overall\n`Value(in_Euro)`       100.0000\nReactions               50.2939\nBaseStats               16.4047\nAge                      7.5742\n`Wage(in_Euro)`          3.8700\nPotential                3.6002\nCB_Rating                2.3274\nDefending_Total          1.0533\nGoalkeeper_Positioning   0.6619\nCrossing                 0.3162\nTotalStats               0.2916\nShooting_Total           0.2559\nStrength                 0.2359\nPositioning              0.2113\nStanding_Tackle          0.1991\nLF_Rating                0.1927\nRelease_Clause           0.1814\nDribbling_Total          0.1650\nLB_Rating                0.1578\nHeading_Accuracy         0.1497\n\n\n\nPlotting variable importance\n\n\nShow the plot’s code\n# data preparation\nvarimp$importance %>%\n  rownames_to_column(var = \"Feature\") %>%\n  dplyr::rename(Importance = Overall) %>%\n  filter(Importance != 0) %>% # Only features that have an above 0 importance\n  \n  # Plotting\n  ggplot(aes(x = reorder(Feature, -Importance), y = Importance)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip(ylim = c(0, 100)) +\n  scale_y_continuous(limits = c(0,100), expand = c(0, 0)) +\n  labs(x = \"Feature\", y = \"Importance\", title = \"Variable importance in boosted model\", caption = \"Tomer Zipori | FIFA 23 Player Research by Babatunde Zenith | Kaggle\") +\n  theme_classic() +\n  theme(axis.text.y = element_text(size = 7),\n        plot.title = element_text(size = 16, hjust = 0.5),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        plot.caption = element_text(size = 6, hjust = 0.5, vjust = -5))\n\n\n\n\n\nPlayer value is the strongest predictor by far, with a few interesting ones right behind it (CB_rating?)."
  },
  {
    "objectID": "posts/ufo/index.html",
    "href": "posts/ufo/index.html",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "",
    "text": "Some time ago, when the fall semester began I’ve enrolled on a course called Data science lab as part of the ‘Data Science for the Social Sciences’ program. One of the assignments was to make some tidyverse contribution and to present it in class. Although this is not what I’ve presented in class (see the post about that one), this was made shortly after and I think it came out quite nice :)"
  },
  {
    "objectID": "posts/ufo/index.html#initial-pre-processing",
    "href": "posts/ufo/index.html#initial-pre-processing",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Initial pre-processing",
    "text": "Initial pre-processing\n\nufo_sightings <- readr::read_csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-06-25/ufo_sightings.csv\")\n\nusa <- map_data(\"state\") # US map\n\nstate_codes <- read_csv(\"state_code.csv\") %>% # converting from state name to 2-letter code and back\n  select(state, code) %>%\n  mutate(state = tolower(state), code = tolower(code))\n\nuspop <- read_excel(\"uspop.xlsx\", col_names = c(\"region\", \"pop_2010\", \"pop_2011\", \"pop_2012\", \"pop_2013\", \"pop_2014\")) %>% # info about state population\n  mutate(region = tolower(str_remove(region, \".\"))) %>%\n  rowwise() %>%\n  mutate(mean_pop = mean(c(pop_2010, pop_2011, pop_2012, pop_2013, pop_2014))) %>%\n  ungroup() %>%\n  select(region, mean_pop)"
  },
  {
    "objectID": "posts/ufo/index.html#glimpsing-at-the-data",
    "href": "posts/ufo/index.html#glimpsing-at-the-data",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Glimpsing at the data",
    "text": "Glimpsing at the data\n\nglimpse(ufo_sightings)\n\nRows: 80,332\nColumns: 11\n$ date_time                  <chr> \"10/10/1949 20:30\", \"10/10/1949 21:00\", \"10…\n$ city_area                  <chr> \"san marcos\", \"lackland afb\", \"chester (uk/…\n$ state                      <chr> \"tx\", \"tx\", NA, \"tx\", \"hi\", \"tn\", NA, \"ct\",…\n$ country                    <chr> \"us\", NA, \"gb\", \"us\", \"us\", \"us\", \"gb\", \"us…\n$ ufo_shape                  <chr> \"cylinder\", \"light\", \"circle\", \"circle\", \"l…\n$ encounter_length           <dbl> 2700, 7200, 20, 20, 900, 300, 180, 1200, 18…\n$ described_encounter_length <chr> \"45 minutes\", \"1-2 hrs\", \"20 seconds\", \"1/2…\n$ description                <chr> \"This event took place in early fall around…\n$ date_documented            <chr> \"4/27/2004\", \"12/16/2005\", \"1/21/2008\", \"1/…\n$ latitude                   <dbl> 29.88306, 29.38421, 53.20000, 28.97833, 21.…\n$ longitude                  <dbl> -97.941111, -98.581082, -2.916667, -96.6458…\n\n\nUs population info taken from the United States Census Bureau."
  },
  {
    "objectID": "posts/ufo/index.html#defining-functions",
    "href": "posts/ufo/index.html#defining-functions",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Defining functions",
    "text": "Defining functions\nSome helper function will help us later, mainly to work with dates.\nconvert_to_date takes a vector of character formatted dates and converts it to lubridate’s date format. floor_decade takes a vector of dates and converts it to a vector of decades.\n\nconvert_to_date <- function(x) { \n  sub_string <- str_sub(x, 1, 10)\n  d <- mdy(sub_string)\n  return(as.numeric(d))\n}\nfloor_decade <- function(x){\n  return(lubridate::year(x) - lubridate::year(x) %% 10)\n  }\n\n\nConverting the dates\n\nufo_sightings <- ufo_sightings %>%\n  mutate(date = as_date(purrr::map_dbl(date_time, ~convert_to_date(.)))) # Convert to 'Date' format. Run only once, its slow af"
  },
  {
    "objectID": "posts/ufo/index.html#globals",
    "href": "posts/ufo/index.html#globals",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Globals",
    "text": "Globals\nHere I’m loading some images and fonts that will be of use later to beautify the plot.\n\nnightsky_img <- \"nightsky2.jpg\"\n\n#font_files() %>% tibble() %>% filter(str_detect(family, \"Showcard Gothic\"))\nfont_add(family = \"Showcard Gothic\", regular = \"SHOWG.TTF\")\nshowtext_auto()"
  },
  {
    "objectID": "posts/ufo/index.html#data-pre-processing",
    "href": "posts/ufo/index.html#data-pre-processing",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Data pre-processing",
    "text": "Data pre-processing\nPreparing the data for plotting. I did several things in here:       1. Leaving only reports from the US.\n      2. Leaving only reports for continental US.\n      3. Selecting the relevant variables.\n      4. Calculating decades.\n\nufo <- ufo_sightings %>%\n  filter(country == \"us\") %>% # Leaving only sightings in US\n  filter(!(state %in% c(\"ak\", \"pr\", \"hi\"))) %>% # Only mainland US\n  select(date, code = state, description, encounter_length, latitude, longitude) %>%\n  left_join(state_codes, by = \"code\") %>%\n  mutate(decade = as.factor(purrr::map_dbl(date, ~floor_decade(.)))) %>% # Create decade variable\n  drop_na(decade)\n\nAfter some experimenting I’ve decided to make a heat map to visualize the number of UFO reports per state. But first, some more data processing. I first counted the number of cases per state (by_state), and them combined it with the USA map data frame (by_state2).\n\nby_state <- ufo %>%\n    group_by(state, decade, .drop = F) %>%\n    summarise(cases = n(),\n              .groups = \"drop\")\n  \nby_state2 <- left_join(usa, by_state, by = c(\"region\" = \"state\"), multiple = \"all\") %>%\n  filter(decade %in% c(2000, 2010)) %>%\n    left_join(uspop, by = \"region\")\n\nNow I need to summarize the number of cases per state.\n\ncases_per_state <- by_state2 %>%\n  group_by(region) %>%\n  summarise(cases = sum(cases), .groups = \"drop\")\n\nAnd finally merge it back together with the geographic data.\n\nby_state2 <- left_join(by_state2, select(cases_per_state, region, cases_total = cases), by = \"region\")"
  },
  {
    "objectID": "posts/ufo/index.html#heatmap-1",
    "href": "posts/ufo/index.html#heatmap-1",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Heatmap 1",
    "text": "Heatmap 1\nAnd now for the heat map… drum roll\n\nheatmap <- ggplot(by_state2, aes(x = long, y = lat, fill = cases_total, group = group)) +\n  geom_polygon(color = \"black\", show.legend = T) +\n  scale_fill_gradient(low = \"#ffae00\", high = \"#d90000\", limits = c(0, 2864832), breaks = c(0, 2850000)) +\n  coord_fixed(1.3, clip = \"off\") +\n  theme_minimal()\n\nheatmap\n\n\n\n\nLooking at these results, I thought that of course California has the most reports, it has the most people!\nA per capita measure will probably be more informative.\nCalculating reports per capita.\n\ncases_per_capita <- by_state2 %>%\n  group_by(region) %>%\n  summarise(cases = sum(cases), .groups = \"drop\") %>%\n  left_join(uspop, by = \"region\") %>%\n  mutate(cases_per_capita = cases/mean_pop)\n\nMerging again with the geographical data.\n\nby_state2 <- left_join(by_state2, select(cases_per_capita, region, cases_per_capita, cases_total = cases), by = \"region\")"
  },
  {
    "objectID": "posts/ufo/index.html#heatmap-2",
    "href": "posts/ufo/index.html#heatmap-2",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Heatmap 2",
    "text": "Heatmap 2\n\nheatmap2 <- ggplot(by_state2, aes(x = long, y = lat, fill = cases_per_capita, group = group)) +\n  geom_polygon(color = \"black\", show.legend = T) +\n  scale_fill_gradient(low = \"#ffae00\", high = \"#d90000\", limits = c(0, 0.2), breaks = seq(0, 0.2, length.out = 6)) +\n  coord_fixed(1.3, clip = \"off\") +\n  theme_minimal()\n\nheatmap2\n\n\n\n\nNice!"
  },
  {
    "objectID": "posts/ufo/index.html#heatmap3",
    "href": "posts/ufo/index.html#heatmap3",
    "title": "Who is the leading US state in UFO reports? probably not what you thought",
    "section": "Heatmap3",
    "text": "Heatmap3\nLet’s add some aesthetics because why not (I’ve only spend 6 hours on Google researching color theory and ggplot2’s internal logic). Unfold the code chunk if you are interested in seeing the monstrosity.\n\n\nCode\nheatmap3 <- ggplot(by_state2, aes(x = long, y = lat, fill = cases_per_capita, group = group)) +\n  geom_polygon(color = \"#00670c\", show.legend = T) +\n  scale_fill_gradient(low = \"black\", high = \"#5dff00\", limits = c(0, 0.2), breaks = seq(0, 0.2, length.out = 6), guide = guide_colorbar(\"Number of reported cases per capita\", \n                                                                               title.position = \"top\",\n                                                                               title.theme = element_text(color = \"#5dff00\", family = \"serif\"),\n                                                                               title.hjust = 0.5,\n                                                                               barwidth = 30,\n                                                                               ticks.colour = NA)) +\n  labs(title = \"15 years of UFO sightings in the US between 2000 and 2014\",\n       caption = \"Tomer Zipori | #TidyTuesday | Source: National UFO Reporting Center\") +\n  coord_fixed(1.3, clip = \"off\") +\n  theme_minimal() +\n  annotate(\"label\", x = -130, y = 45.4, label = \"Washington is spooky!\\n # of cases: 1,228,975\\n Cases per capita: 0.18\",\n           color = \"#5dff00\", fill = \"black\", family = \"serif\", fontface = \"bold\") +\n  geom_curve(aes(x = -127.5, y = 46.4, xend = -124.48, yend = 47.4), color = \"#5dff00\", linewidth = 1, curvature = -0.35,\n             arrow = arrow(type = \"closed\", length = unit(0.02, \"npc\"))) +\n  annotate(\"label\", x = -124, y = 30.4, label = \"Utah has the lowest rate in the US\\n # of cases: 22,715\\n Cases per capita: 0.0079\",\n           color = \"#5dff00\", fill = \"black\", family = \"serif\", fontface = \"bold\") +\n  geom_curve(aes(x = -119.4, y = 31.4, xend = -111.5, yend = 39), color = \"#5dff00\", linewidth = 1, curvature = 0.3,\n             arrow = arrow(type = \"closed\", length = unit(0.02, \"npc\"))) +\n  theme(plot.title = element_text(size = 24, vjust = -4, hjust = 0.5, color = \"#5dff00\", family = \"Showcard Gothic\"),\n        plot.caption = element_text(color = \"#5dff00\", hjust = 1.05, family = \"serif\", size = 9),\n        axis.title.x = element_blank(),\n        axis.title.y = element_blank(),\n        axis.text.x = element_blank(),\n        axis.text.y = element_blank(),\n        panel.grid = element_blank(),\n        legend.position = \"bottom\", legend.box = \"horizontal\", legend.text = element_text(color = \"#5dff00\", family = \"mono\", size = 14))\nheatmap3 <- ggbackground(heatmap3, nightsky_img)"
  }
]